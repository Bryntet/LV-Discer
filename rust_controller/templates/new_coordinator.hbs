<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Make coordinator</title>
    <script src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.6/dist/htmx.min.js"
            integrity="sha384-Akqfrbj/HpNVo8k11SXBb6TlBWmXXlYQrCSqEWmyKJe+hDm3Z/B2WVG4smwBkRVm"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/htmx-ext-ws@2.0.2"
            integrity="sha384-vuKxTKv5TX/b3lLzDKP2U363sOAoRo5wSvzzc3LJsbaQRSBSS+3rKKHcOx5J8doU"
            crossorigin="anonymous"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 80%;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
        }

        .round-selector {
            margin-bottom: 20px;
        }

        #groups-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .group {
            background-color: #fff;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            flex: 1;
            min-width: 200px;
            max-width: 90%;
        }

        .group-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .group-header h2 {
            margin: 0;
            font-size: 1.2em;
        }

        .group-content {
            display: block;
            margin-top: 15px;
        }

        .player {
            margin: 10px 0;
            padding: 5px 0;
            border-bottom: 1px solid #eee;
        }

        .player:last-child {
            border-bottom: none;
        }

        input[type="checkbox"] {
            margin-right: 10px;
        }

        button, select {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        button:hover, select:hover {
            background-color: #45a049;
        }

        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .toggle-icon {
            font-size: 1.2em;
        }

        .status-indicator {
            font-size: 0.8em;
            padding: 2px 6px;
            border-radius: 4px;
            margin-left: 10px;
        }

        .status-OPEN {
            background-color: #4CAF50;
            color: white;
        }

        .status-CLOSED {
            background-color: #f44336;
            color: white;
        }

        .status-DONE {
            background-color: #2196F3;
            color: white;
        }

        .htmx-indicator {
            opacity: 0;
            transition: opacity 500ms ease-in;
        }

        .htmx-request .htmx-indicator {
            opacity: 1
        }

        .htmx-request.htmx-indicator {
            opacity: 1
        }

        .event-id-container {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin-bottom: 10px;
        }

        .event-id-row {
            display: flex;
            align-items: center;
        }

        .event-id-input {
            width: 250px;
            margin-right: 10px;
        }

        .add-event-id {
            background-color: #2196F3;
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            font-size: 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .add-event-id:hover {
            background-color: #0b7dda;
        }

        .ip-broadcast-type-container {
            display: flex;
            align-items: flex-end;
            gap: 20px;
            margin-bottom: 15px;
        }

        .ip-input {
            flex-grow: 0;
        }

        .broadcast-type-switch-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .broadcast-type-label {
            margin-bottom: 5px;
        }

        .broadcast-type {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .broadcast-type input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }
    </style>
    <link rel="stylesheet" href="static/styles.css">
</head>
<body>
<h1>Make a new coordinator</h1>

<div id="coordinator_loader">
    <form hx-post="/htmx/init" hx-target="body" hx-swap="outerHTML">
        <div class="ip-broadcast-type-container">
            <div class="ip-input">
                <label for="ip">What ip is vMix running on?</label>
                <input name="ip" id="ip" value="10.170.121.242" required/>
            </div>
            <div class="broadcast-type-switch-container">
                <span class="broadcast-type-label">Live?</span>
                <label class="broadcast-type">
                    <input type="checkbox" id="broadcast_type_checkbox">
                    <span class="slider"></span>
                </label>
                <input type="hidden" name="broadcast_type" id="broadcast_type_hidden" value="Live">
            </div>
        </div>
        <div>
            <label>Event ID(s):</label>
            <div id="event-ids-container" class="event-id-container">
                {{#each event_ids}}
                    <div class="event-id-row">
                        <input name="event_ids[]" class="event-id-input" value="{{this}}"
                               {{#if @first}}required{{/if}}/>
                        {{#if @last}}
                            <button type="button" class="add-event-id" onclick="addEventIdField()">+</button>
                        {{/if}}
                    </div>
                {{/each}}
            </div>
        </div>
        <div>
            <label for="round">How many rounds have been completed before this one?</label>
            <input name="round" id="round" value=0 required>
        </div>
        <div>
            <label for="featured_hole">Which hole is featured?</label>
            <input name="featured_hole" id="featured_hole" value="1" required>
        </div>
        <div>
            <button type="submit">Load</button>
            <img class="htmx-indicator" src="https://htmx.org/img/bars.svg"/>
        </div>
    </form>
</div>

<script>
    function addEventIdField() {
        const container = document.getElementById('event-ids-container');
        const lastRow = container.lastElementChild;

        // Create a new row
        const newRow = document.createElement('div');
        newRow.className = 'event-id-row';

        // Create a new input field
        const newField = document.createElement('input');
        newField.type = 'text';
        newField.name = 'event_ids[]';
        newField.className = 'event-id-input';
        newField.required = true;

        // Add the new input to the new row
        newRow.appendChild(newField);

        // Move the add button to the new row
        newRow.appendChild(lastRow.lastElementChild);

        // Add the new row to the container
        container.appendChild(newRow);
    }

    document.getElementById('broadcast_type_checkbox').addEventListener('change', function () {
        const hiddenInput = document.getElementById('broadcast_type_hidden');
        hiddenInput.value = this.checked ? 'Live' : 'PostLive';
    });
</script>

</body>
</html>